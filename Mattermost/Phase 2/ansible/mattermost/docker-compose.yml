version: "3.3"

services:

  app:
    build:
      context: app
      # uncomment following lines for team edition or change UID/GID
      # args:
      #   - edition=team
      #   - PUID=1000
      #   - PGID=1000
    restart: unless-stopped
    network_mode: host
    volumes:
      - ./volumes/app/mattermost/config:/mattermost/config:rw
      - ./volumes/app/mattermost/data:/mattermost/data:rw
      - ./volumes/app/mattermost/logs:/mattermost/logs:rw
      - ./volumes/app/mattermost/plugins:/mattermost/plugins:rw
      - ./volumes/app/mattermost/client-plugins:/mattermost/client/plugins:rw
      - /etc/localtime:/etc/localtime:ro
      # When you want to use SSO with GitLab, you have to add the cert pki chain of GitLab inside Alpine
      # to avoid Token request failed: certificate signed by unknown authority (link: https://github.com/mattermost/mattermost-server/issues/13059)
      # - <path_to_your_gitlab_pki>/pki_chain.pem:/etc/ssl/certs/pki_chain.pem:ro
    environment:
      # set same as db credentials and dbname
      - MM_USERNAME=mmuser
      - MM_PASSWORD=mmuser_password
      - MM_DBNAME=mattermost

      # use the credentials you've set above, in the format:
      # MM_SQLSETTINGS_DATASOURCE=postgres://${MM_USERNAME}:${MM_PASSWORD}@db:5432/${MM_DBNAME}?sslmode=disable&connect_timeout=10
      - MM_SQLSETTINGS_DATASOURCE=postgres://mmuser:mmuser_password@${MM_DB_MASTER}:5432/mattermost?sslmode=disable&connect_timeout=10

      # in case your config is not in default location
      #- MM_CONFIG=/mattermost/config/config.json

  web:
    build: web
    ports:
      - "80:80"
      - "443:443"
    read_only: true
    restart: unless-stopped
    network_mode: host
    volumes:
      # This directory must have cert files if you want to enable SSL
      - ./volumes/web/cert:/cert:ro
      - /etc/localtime:/etc/localtime:ro

# ----- MONITORING -----

  metricbeat:
    user: root
    image: docker.elastic.co/beats/metricbeat:7.10.1
    environment: 
      - system.hostfs=/hostfs
      - METRICS_HOST=${METRICS_HOST}
    network_mode: host
    volumes:
        # Configuration files.
      - ./beats/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
        # System process metrics.
      - type: bind
        source: /proc
        target: /hostfs/proc
        read_only: true
        # System filesystem metrics.
      - type: bind
        source: /sys/fs/cgroup
        target: /hostfs/sys/fs/cgroup
        read_only: true
        # System network metrics.
      - type: bind
        source: /
        target: /hostfs
        read_only: true

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.10.1
    environment: 
      - METRICS_HOST=${METRICS_HOST}
    network_mode: host
    volumes: 
      - ./beats/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
        read_only: true

  packetbeat:
    user: root
    image: docker.elastic.co/beats/packetbeat:7.10.2
    environment: 
      - METRICS_HOST=${METRICS_HOST}
    network_mode: host
    volumes: 
      - ./beats/packetbeat/packetbeat.yml:/usr/share/packetbeat/packetbeat.yml:ro
    cap_add:
      - NET_ADMIN
    command: --strict.perms=false

  heartbeat:
    image: docker.elastic.co/beats/heartbeat:7.10.2
    environment: 
      - METRICS_HOST=${METRICS_HOST}
    network_mode: host
    volumes: 
      - ./beats/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro